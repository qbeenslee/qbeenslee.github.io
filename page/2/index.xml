<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>姐姐好美! on Hey sister</title>
    <link>https://qbeenslee.com/</link>
    <description>Recent content in 姐姐好美! on Hey sister</description>
    <language>zh-cn</language>
    
        <atom:link href="https://qbeenslee.com/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
        <title>豌豆荚Android混淆字典, 眼睛要瞎了</title>
        <link>https://qbeenslee.com/article/about-wandoujia-proguard-config/</link>
        <pubDate>Wed, 27 Jan 2016 10:49:38 +0800</pubDate>
        <author>qbeenslee</author>
        <guid>https://qbeenslee.com/article/about-wandoujia-proguard-config/</guid>
        
          <description>&lt;p&gt;作为Android开发者, 时常会下载一些制作精良的App学习借鉴(反编译看源码^_^).&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.wandoujia.com/yilan&#34;   target=&#34;_blank&#34;  &gt;豌豆荚一览&lt;/a&gt;是一款很棒的产品, 它的Android客户端用户体验也优秀, 比如文章的浏览交互, 排版优化, 离线, 以及和其他相关应用的衔接等等.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://qbeenslee-1259354687.cos.ap-shanghai.myqcloud.com/2019/11/hln4r0g.png&#34; alt=&#34;豌豆荚一览&#34; /&gt;&lt;/p&gt;
&lt;p&gt;然后, 就去反编译学习学习喽.&lt;/p&gt;
&lt;p&gt;但, 这是什么啊&amp;hellip;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/Wuetcry.png&#34; alt=&#34;jadx&#34; /&gt;&lt;br /&gt;
&lt;img src=&#34;https://i.imgur.com/pYUDTSW.png&#34; alt=&#34;eyepetizer-eyepetizer_web&#34; width=&#34;600px&#34;&gt;&lt;/p&gt;
&lt;p&gt;成员变量都变成&lt;code&gt;奇奇怪怪的逗点&lt;/code&gt;了, 说好的acbde呢, 看这代码宝宝的眼睛都要瞎掉了&amp;hellip;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/pbJC5CU.gif&#34; alt=&#34;宝宝心里苦,但宝宝不说&#34; /&gt;&lt;/p&gt;
&lt;p&gt;好吧, 豌豆荚的Android项目中混淆控制都修改了外部模糊字典, 然后还在众千字符中辛辛苦苦找出了一堆&lt;code&gt;奇奇怪怪的逗点&lt;/code&gt;, 哈哈哈&amp;hellip;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;&#34;&gt;#&lt;/span&gt;指定外部模糊字典
&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;obfuscationdictionary dictionary&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;txt&lt;/span&gt;

&lt;span style=&#34;&#34;&gt;#&lt;/span&gt;指定class模糊字典
&lt;span style=&#34;&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;classobfuscationdictionary filename
&lt;span style=&#34;&#34;&gt;#&lt;/span&gt;指定package模糊字典
&lt;span style=&#34;&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;packageobfuscationdictionary filename
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后呢, 宝宝眯着眼睛去复制了一堆&lt;code&gt;奇奇怪怪的逗点&lt;/code&gt;, 制作了一个混淆字典. 字典一共是28个字符包括650词语应该是够用了, 放在&lt;a href=&#34;https://github.com/qbeenslee/gradle-proguard-hehe-dictionary&#34;   target=&#34;_blank&#34;  &gt;github&lt;/a&gt;上, 心疼宝宝的可以star一下.&lt;/p&gt;</description>
        
      </item>
    <item>
        <title>2015年总结</title>
        <link>https://qbeenslee.com/article/summary-of-2015/</link>
        <pubDate>Tue, 26 Jan 2016 10:07:16 +0800</pubDate>
        <author>qbeenslee</author>
        <guid>https://qbeenslee.com/article/summary-of-2015/</guid>
        
          <description>&lt;blockquote&gt;
&lt;p&gt;给一些事情一个定性的评价是很困难的, 只能感觉过去的一年不是我想要的.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;过去的一年, 经历了实习, 毕业, 车祸以及各种吃喝玩乐, 线下活动. 见识了各色人物, 知道自己的高低.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;实习&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;第一份实习是在一家类似于国企的单位做Android平板应用开发, 干了三个月撤了. 这也是我人生的第一份实习工作, 不能说学到多少东西, 只能感觉到我想要什么, 应该去哪里.&lt;/p&gt;
&lt;p&gt;第二份实习之后也入职转正了, 互联网公司, 加班多.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;毕业&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;对于过去的大学生活, 我不是很留恋, 原因是大学只是一个学习的地方, 可我得到的是陈旧流水线上过期的食品(这也和我上的大学有关).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;车祸&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;夏夜, 骑车去印象城觅食, 归途翻车. 上下嘴唇撕裂, 两颗大门牙粉碎&amp;hellip; 有一种体会, 生命中没有什么是不可以失去的.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;吃喝玩乐&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;努力的学习工作就是为了可以尽可能的实现财务自由, 感受这个世界可以带给你的感官愉悦. 逛了杭州很多的咖啡屋, 可以到植物园开一下午的碰碰车.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;线下活动&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;杭州除了空气和交通算是一个很棒的地方, 有很多线下交流的组织和活动. 参加了很多乱七八糟的活动, 其中 &lt;a href=&#34;http://www.tedxzju.com&#34;   target=&#34;_blank&#34;  &gt;TEDxZJU&lt;/a&gt;, 和&lt;a href=&#34;http://www.huodongxing.com/org/360470805950&#34;   target=&#34;_blank&#34;  &gt;食话&lt;/a&gt;算是一个不错的活动.&lt;/p&gt;
&lt;h2 id=&#34;总结&#34;&gt;总结&lt;/h2&gt;
&lt;p&gt;这一年, 我得到了一些我想得到的东西, 但我却从未跨出一步勇敢的步伐, 也不曾履行一份坚韧的执着.&lt;/p&gt;
&lt;p&gt;这是我想要的吗!&lt;/p&gt;</description>
        
      </item>
    <item>
        <title>一种简洁的Adapter模式实现</title>
        <link>https://qbeenslee.com/article/super-simple-android-adapter-pattern/</link>
        <pubDate>Tue, 15 Dec 2015 11:46:43 +0800</pubDate>
        <author>qbeenslee</author>
        <guid>https://qbeenslee.com/article/super-simple-android-adapter-pattern/</guid>
        
          <description>&lt;p&gt;鄙人觉得做重复的事情就是浪费生命啊(&lt;a href=&#34;https://en.wikipedia.org/wiki/Don%27t_repeat_yourself&#34;   target=&#34;_blank&#34;  &gt;Don&amp;rsquo;t Repeat Yourself原则&lt;/a&gt;), 在Android中&lt;a href=&#34;http://developer.android.com/reference/android/widget/ListView.html&#34;   target=&#34;_blank&#34;  &gt;ListView&lt;/a&gt;的Adapter中有大量重复工作可以被取消掉.&lt;/p&gt;
&lt;p&gt;首先看看一种已经实现的调用方式:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;adapter &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;
&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;new&lt;/span&gt; QuickAdapter&lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&lt;/span&gt;GoodsModel&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;(&lt;/span&gt;R&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;layout&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;adapter_goods&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
            &lt;span style=&#34;color:#555;font-weight:bold&#34;&gt;@Override&lt;/span&gt;
            &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#902000&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#06287e&#34;&gt;bindView&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;Context context&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; AutoViewHolder holder&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#902000&#34;&gt;int&lt;/span&gt; position&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; GoodsDetailModel model&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
                &lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;//商品缩略图
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&lt;/span&gt;                Picasso&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;with&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;NativeActivity&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;).&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;load&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;model&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;getPicThumb&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;()).&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;into&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;holder&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;getImageView&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;R&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;goods_item_thumb&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;));&lt;/span&gt;
                &lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;//商品的标题
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&lt;/span&gt;                holder&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;getTextView&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;R&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;goods_item_title&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;).&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;setText&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;model&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;getTitle&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;());&lt;/span&gt;
                &lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;//商品的价格
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&lt;/span&gt;                holder&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;getTextView&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;R&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;goods_item_now_price&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;).&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;setText&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;model&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;getPrice&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;());&lt;/span&gt;
            &lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;
        &lt;span style=&#34;color:#666&#34;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;说明: &lt;code&gt;GoodsModel&lt;/code&gt;是商品的数据模型, &lt;code&gt;R.layout.adapter_goods&lt;/code&gt;是相应的布局文件, 然后在&lt;code&gt;bindView()&lt;/code&gt;方法中将相应的数据和视图绑定.&lt;/p&gt;
&lt;p&gt;以下是鄙人的实现:&lt;/p&gt;
&lt;h3 id=&#34;quickadapter&#34;&gt;QuickAdapter&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;package&lt;/span&gt; &lt;span style=&#34;color:#0e84b5;font-weight:bold&#34;&gt;com.qbeenslee.base&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#0e84b5;font-weight:bold&#34;&gt;android.content.Context&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#0e84b5;font-weight:bold&#34;&gt;android.view.LayoutInflater&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#0e84b5;font-weight:bold&#34;&gt;android.view.View&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#0e84b5;font-weight:bold&#34;&gt;android.view.ViewGroup&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#0e84b5;font-weight:bold&#34;&gt;android.widget.BaseAdapter&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#0e84b5;font-weight:bold&#34;&gt;java.util.ArrayList&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#0e84b5;font-weight:bold&#34;&gt;java.util.List&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#0e84b5;font-weight:bold&#34;&gt;QuickAdapter&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;extends&lt;/span&gt; BaseAdapter &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;final&lt;/span&gt; &lt;span style=&#34;color:#902000&#34;&gt;int&lt;/span&gt; layoutId&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;protected&lt;/span&gt; List&lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; mData&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;

    &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#06287e&#34;&gt;QuickAdapter&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#902000&#34;&gt;int&lt;/span&gt; layoutId&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;layoutId&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; layoutId&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#06287e&#34;&gt;QuickAdapter&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#902000&#34;&gt;int&lt;/span&gt; layoutId&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; List&lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; data&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;layoutId&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; layoutId&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;
        &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;mData&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; data&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;


    &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#902000&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#06287e&#34;&gt;addData&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;List&lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; data&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;data &lt;span style=&#34;color:#666&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
            &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;mData&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
                &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;mData&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;new&lt;/span&gt; ArrayList&lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&amp;gt;(&lt;/span&gt;data&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;size&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;());&lt;/span&gt;
            &lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;
            &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;mData&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;addAll&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;data&lt;span style=&#34;color:#666&#34;&gt;);&lt;/span&gt;
            notifyDataSetChanged&lt;span style=&#34;color:#666&#34;&gt;();&lt;/span&gt;
        &lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;public&lt;/span&gt; List&lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#06287e&#34;&gt;getData&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;return&lt;/span&gt; mData&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#902000&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#06287e&#34;&gt;setData&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;List&lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; data&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;data &lt;span style=&#34;color:#666&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
            &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;mData&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
                &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;mData&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; data&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;
            &lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
                &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;mData&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;clear&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;();&lt;/span&gt;
                &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;mData&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;addAll&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;data&lt;span style=&#34;color:#666&#34;&gt;);&lt;/span&gt;
            &lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;
            notifyDataSetChanged&lt;span style=&#34;color:#666&#34;&gt;();&lt;/span&gt;
        &lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;public&lt;/span&gt; View &lt;span style=&#34;color:#06287e&#34;&gt;getLayoutView&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;ViewGroup parent&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#902000&#34;&gt;int&lt;/span&gt; layoutRes&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
        View view &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;
        &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;parent &lt;span style=&#34;color:#666&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
            Context context &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; parent&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;getContext&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;();&lt;/span&gt;
            &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;context &lt;span style=&#34;color:#666&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
                LayoutInflater li &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;LayoutInflater&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; context&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;getSystemService&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;Context&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;LAYOUT_INFLATER_SERVICE&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;);&lt;/span&gt;
                &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;li &lt;span style=&#34;color:#666&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
                    view &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; li&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;inflate&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;layoutRes&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; parent&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;);&lt;/span&gt;
                &lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;
            &lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;
        &lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;
        &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;return&lt;/span&gt; view&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#555;font-weight:bold&#34;&gt;@Override&lt;/span&gt;
    &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#902000&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#06287e&#34;&gt;getCount&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;return&lt;/span&gt; mData &lt;span style=&#34;color:#666&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;null&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;?&lt;/span&gt; 0 &lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt; mData&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;size&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;();&lt;/span&gt;
    &lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#555;font-weight:bold&#34;&gt;@Override&lt;/span&gt;
    &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;public&lt;/span&gt; T &lt;span style=&#34;color:#06287e&#34;&gt;getItem&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#902000&#34;&gt;int&lt;/span&gt; position&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;return&lt;/span&gt; mData &lt;span style=&#34;color:#666&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;null&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; mData&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;size&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; position &lt;span style=&#34;color:#666&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; position &lt;span style=&#34;color:#666&#34;&gt;&amp;gt;=&lt;/span&gt; 0 &lt;span style=&#34;color:#666&#34;&gt;?&lt;/span&gt; mData&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;get&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;position&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#555;font-weight:bold&#34;&gt;@Override&lt;/span&gt;
    &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#902000&#34;&gt;long&lt;/span&gt; &lt;span style=&#34;color:#06287e&#34;&gt;getItemId&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#902000&#34;&gt;int&lt;/span&gt; position&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;return&lt;/span&gt; position&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#555;font-weight:bold&#34;&gt;@Override&lt;/span&gt;
    &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;public&lt;/span&gt; String &lt;span style=&#34;color:#06287e&#34;&gt;toString&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;return&lt;/span&gt; mData &lt;span style=&#34;color:#666&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;null&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;?&lt;/span&gt; &lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;CommonAdapter:Data Is Null&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;CommonAdapter{&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;mData=&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; mData &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;}&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#902000&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#06287e&#34;&gt;getLayoutId&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;return&lt;/span&gt; layoutId&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#555;font-weight:bold&#34;&gt;@Override&lt;/span&gt;
    &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;public&lt;/span&gt; View &lt;span style=&#34;color:#06287e&#34;&gt;getView&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#902000&#34;&gt;int&lt;/span&gt; position&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; View convertView&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; ViewGroup parent&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;convertView &lt;span style=&#34;color:#666&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
            convertView &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; getLayoutView&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;parent&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; layoutId&lt;span style=&#34;color:#666&#34;&gt;);&lt;/span&gt;
        &lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;
        bindView&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;parent&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;getContext&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(),&lt;/span&gt; AutoViewHolder&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;getViewHolder&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;convertView&lt;span style=&#34;color:#666&#34;&gt;),&lt;/span&gt; position&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; getItem&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;position&lt;span style=&#34;color:#666&#34;&gt;));&lt;/span&gt;
        &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;return&lt;/span&gt; convertView&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#902000&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#06287e&#34;&gt;bindView&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;Context context&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; AutoViewHolder holder&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#902000&#34;&gt;int&lt;/span&gt; position&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; T model&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;autoviewholder&#34;&gt;AutoViewHolder&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;package&lt;/span&gt; &lt;span style=&#34;color:#0e84b5;font-weight:bold&#34;&gt;com.qbeenslee.base&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#0e84b5;font-weight:bold&#34;&gt;android.util.SparseArray&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#0e84b5;font-weight:bold&#34;&gt;android.view.View&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#0e84b5;font-weight:bold&#34;&gt;android.widget.Button&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#0e84b5;font-weight:bold&#34;&gt;android.widget.ImageView&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#0e84b5;font-weight:bold&#34;&gt;android.widget.TextView&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;/**
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt; * ViewHolder模式
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt; */&lt;/span&gt;
&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#0e84b5;font-weight:bold&#34;&gt;AutoViewHolder&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;final&lt;/span&gt; SparseArray&lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&lt;/span&gt;View&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; viewHolder&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;final&lt;/span&gt; View view&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;

    &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#06287e&#34;&gt;AutoViewHolder&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;View view&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;view&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; view&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;
        viewHolder &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;new&lt;/span&gt; SparseArray&lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
        view&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;setTag&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;viewHolder&lt;span style=&#34;color:#666&#34;&gt;);&lt;/span&gt;
    &lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;static&lt;/span&gt; AutoViewHolder &lt;span style=&#34;color:#06287e&#34;&gt;getViewHolder&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;View view&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
        AutoViewHolder viewHolder &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;AutoViewHolder&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; view&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;getTag&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;();&lt;/span&gt;
        &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;viewHolder &lt;span style=&#34;color:#666&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
            viewHolder &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;new&lt;/span&gt; AutoViewHolder&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;view&lt;span style=&#34;color:#666&#34;&gt;);&lt;/span&gt;
            view&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;setTag&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;viewHolder&lt;span style=&#34;color:#666&#34;&gt;);&lt;/span&gt;
        &lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;
        &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;return&lt;/span&gt; viewHolder&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&lt;/span&gt;T &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;extends&lt;/span&gt; View&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; T &lt;span style=&#34;color:#06287e&#34;&gt;get&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#902000&#34;&gt;int&lt;/span&gt; id&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
        View childView &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; viewHolder&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;get&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;id&lt;span style=&#34;color:#666&#34;&gt;);&lt;/span&gt;
        &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;childView &lt;span style=&#34;color:#666&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
            childView &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; view&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;findViewById&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;id&lt;span style=&#34;color:#666&#34;&gt;);&lt;/span&gt;
            viewHolder&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;put&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;id&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; childView&lt;span style=&#34;color:#666&#34;&gt;);&lt;/span&gt;
        &lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;
        &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;T&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; childView&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;public&lt;/span&gt; View &lt;span style=&#34;color:#06287e&#34;&gt;getConvertView&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;return&lt;/span&gt; view&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;public&lt;/span&gt; TextView &lt;span style=&#34;color:#06287e&#34;&gt;getTextView&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#902000&#34;&gt;int&lt;/span&gt; id&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;return&lt;/span&gt; get&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;id&lt;span style=&#34;color:#666&#34;&gt;);&lt;/span&gt;
    &lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;public&lt;/span&gt; Button &lt;span style=&#34;color:#06287e&#34;&gt;getButton&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#902000&#34;&gt;int&lt;/span&gt; id&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;return&lt;/span&gt; get&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;id&lt;span style=&#34;color:#666&#34;&gt;);&lt;/span&gt;
    &lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;public&lt;/span&gt; ImageView &lt;span style=&#34;color:#06287e&#34;&gt;getImageView&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#902000&#34;&gt;int&lt;/span&gt; id&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;return&lt;/span&gt; get&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;id&lt;span style=&#34;color:#666&#34;&gt;);&lt;/span&gt;
    &lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#902000&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#06287e&#34;&gt;setTextView&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#902000&#34;&gt;int&lt;/span&gt; id&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; CharSequence charSequence&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
        getTextView&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;id&lt;span style=&#34;color:#666&#34;&gt;).&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;setText&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;charSequence&lt;span style=&#34;color:#666&#34;&gt;);&lt;/span&gt;
    &lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;

&lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在github上搜了一下发现基于RecyclerView的实现方案, 大家也可以参考一下&lt;a href=&#34;https://github.com/LightSun/android-common-utils/blob/master/common-utils/commonutil/src/main/java/org/heaven7/core/adapter/QuickAdapter.java&#34;   target=&#34;_blank&#34;  &gt;QuickAdapter&lt;/a&gt; , &lt;a href=&#34;https://github.com/chenenyu/SuperAdapter&#34;   target=&#34;_blank&#34;  &gt;SuperAdapter&lt;/a&gt;, &lt;a href=&#34;https://github.com/bboyfeiyu/commonadapter&#34;   target=&#34;_blank&#34;  &gt;CommonAdapter&lt;/a&gt; .&lt;/p&gt;</description>
        
      </item>
    <item>
        <title>OSX日常开发工具推荐</title>
        <link>https://qbeenslee.com/article/develop-software-on-mac/</link>
        <pubDate>Sat, 07 Nov 2015 21:45:58 +0800</pubDate>
        <author>qbeenslee</author>
        <guid>https://qbeenslee.com/article/develop-software-on-mac/</guid>
        
          <description>&lt;p&gt;有些很好用的小众工具, 用着很开心, 然后在这推荐一下!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;输入法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://rime.im&#34;   target=&#34;_blank&#34;  &gt;鼠须管&lt;/a&gt; 输入法就应该纯洁可调教, 而且鼠须管(rime)是一款跨平台的输入法.&lt;/p&gt;
&lt;img src=&#34;https://i.loli.net/2019/03/23/5c963dc26b12c.png&#34; alt=&#34;鼠须管&#34; width=&#34;600px&#34;/&gt;
&lt;p&gt;&lt;strong&gt;正则表达式测试工具&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://reggyapp.com&#34;   target=&#34;_blank&#34;  &gt;reggy&lt;/a&gt; 离线测试正则表达式, 小巧简洁.&lt;br /&gt;
&lt;img src=&#34;https://i.loli.net/2019/03/23/5c963dc414fe9.png&#34; alt=&#34;reggy&#34; width=&#34;400px&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Android截屏工具&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/mortenjust/androidtool-mac&#34;   target=&#34;_blank&#34;  &gt;AndroidTool&lt;/a&gt; 当然除了截屏录像, 还可以双击apk文件安装, 支持加载自定义脚本哦!&lt;br /&gt;
&lt;img src=&#34;https://i.loli.net/2019/03/23/5c963dc32cc9c.png&#34; alt=&#34;AndroidTool&#34; width=&#34;400px&#34;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Android反编译工具&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/skylot/jadx&#34;   target=&#34;_blank&#34;  &gt;JADX&lt;/a&gt; 反向编译APK从来没有这么开心过!&lt;br /&gt;
&lt;img src=&#34;https://i.loli.net/2019/03/23/5c963dcdd91aa.png&#34; alt=&#34;jadx&#34; width=&#34;600px&#34;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;hosts管理工具&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/2ndalpha/gasmask&#34;   target=&#34;_blank&#34;  &gt;GasMask&lt;/a&gt; 快速切换hosts环境, 支持组合hosts.&lt;br /&gt;
&lt;img src=&#34;https://i.loli.net/2019/03/23/5c963dc5da85c.png&#34; alt=&#34;GasMask&#34; width=&#34;500px&#34;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;截图工具&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://snappy-app.com&#34;   target=&#34;_blank&#34;  &gt;snappy-app&lt;/a&gt; 绝对的截图神器, 谁用谁知道!&lt;br /&gt;
&lt;img src=&#34;https://i.loli.net/2019/03/23/5c963dcca90e9.png&#34; alt=&#34;snappy-app&#34; width=&#34;400px&#34;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;PDF阅读器&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://skim-app.sourceforge.net&#34;   target=&#34;_blank&#34;  &gt;skim&lt;/a&gt; 轻量级的PDF阅读器, 界面简洁, 支持注释.&lt;br /&gt;
&lt;img src=&#34;https://i.loli.net/2019/03/23/5c963dcc27e8e.png&#34; alt=&#34;skim&#34; width=&#34;600px&#34;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;网络拦截工具&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://mitmproxy.org&#34;   target=&#34;_blank&#34;  &gt;mitmproxy&lt;/a&gt; 中间人攻击的神器, 当然我只是用来抓包分析而已.&lt;br /&gt;
&lt;img src=&#34;https://i.loli.net/2019/03/23/5c963dcb2896a.png&#34; alt=&#34;mitmproxy&#34; width=&#34;800px&#34;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: 以上工具全部免费, 部分开源.&lt;/p&gt;</description>
        
      </item>
    <item>
        <title>微猫Android SDK分析</title>
        <link>https://qbeenslee.com/article/wemart-android-sdk-analyse/</link>
        <pubDate>Wed, 28 Oct 2015 15:41:40 +0800</pubDate>
        <author>qbeenslee</author>
        <guid>https://qbeenslee.com/article/wemart-android-sdk-analyse/</guid>
        
          <description>&lt;p&gt;无意中知道&lt;a href=&#34;http://www.wemart.cn&#34;   target=&#34;_blank&#34;  &gt;微猫&lt;/a&gt;这个网站, 他们是这样介绍自己的&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我们，致力于社会化电子商务解决方案的实践。&lt;br /&gt;
我们的创始团队成员，曾在多家国内知名互联网公司和跨国企业担任高管。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;那就关怀一下, 下载了他们的&lt;a href=&#34;http://www.wemart.cn/v2/static/wm_android_sdk.zip&#34;   target=&#34;_blank&#34;  &gt;Android SDK&lt;/a&gt;看看. 觉得他们处理网页和原生交互的方式设计还是比较不错的.&lt;/p&gt;
&lt;p&gt;先看一下SDK的调用方式:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;webView &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;WemartJSBridgeWebView&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; findViewById&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;R&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;webView&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;);&lt;/span&gt;
String ua &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; webView&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;getSettings&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;getUserAgentString&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;();&lt;/span&gt;
webView&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;getSettings&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;setUserAgentString&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;ua &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;; WemartApp/1.0; app=XXX&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;);&lt;/span&gt;
webView&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;initContext&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;http://www.wemart.cn/v2/sdk/WemartJSBridge.js&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;);&lt;/span&gt;
webView&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;setWebChromeClient&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;new&lt;/span&gt; WebChromeClient&lt;span style=&#34;color:#666&#34;&gt;());&lt;/span&gt;
webView&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;loadUrl&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;http://...&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;);&lt;/span&gt; &lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;//店铺链接
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&lt;/span&gt;webView&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;registerEvent&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;nativePay&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;new&lt;/span&gt; WemartJSBridgeHandler&lt;span style=&#34;color:#666&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;

    &lt;span style=&#34;color:#555;font-weight:bold&#34;&gt;@Override&lt;/span&gt;
	&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#902000&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#06287e&#34;&gt;handler&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;String data&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;final&lt;/span&gt; WemartJSBridgeCallBack callback&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
		pay&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;data&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; callback&lt;span style=&#34;color:#666&#34;&gt;);&lt;/span&gt;
	&lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;调用方式很简单, 就一个&lt;code&gt;WemartJSBridgeWebView&lt;/code&gt;统管全部交互. 这个类主要干的事情是接管了页面状态处理并维持一个回调集合.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;WemartJSBridgeWebView&lt;/code&gt;里面的&lt;code&gt;BridgeWebViewClient&lt;/code&gt;内部类,  主要是重写了&lt;code&gt;WebViewClient&lt;/code&gt;类的这两个方法&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;public void onPageFinished(WebView view, String url)&lt;/li&gt;
&lt;li&gt;public boolean shouldOverrideUrlLoading(WebView view, String url)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我们就这两个方法展开分析.&lt;/p&gt;
&lt;h4 id=&#34;onpagefinished&#34;&gt;onPageFinished&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#555;font-weight:bold&#34;&gt;@Override&lt;/span&gt;
&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#902000&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#06287e&#34;&gt;onPageFinished&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;WebView view&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; String url&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;super&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;onPageFinished&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;view&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; url&lt;span style=&#34;color:#666&#34;&gt;);&lt;/span&gt;
    &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;isCurrentlyLoading&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;||&lt;/span&gt; url&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;startsWith&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;about:&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;isCurrentlyLoading&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;
        &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;WemartJSBridgeWebView&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;toLoadJs&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
            JSBridgeUtil&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;webViewLoadJs&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;view&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; WemartJSBridgeWebView&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;toLoadJs&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;);&lt;/span&gt;
        &lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;
        &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;WemartJSBridgeWebView&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;startupMessage&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
            &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;JSBridgeMessage m&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt; WemartJSBridgeWebView&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;startupMessage&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
                WemartJSBridgeWebView&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;dispatchMessage&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;m&lt;span style=&#34;color:#666&#34;&gt;);&lt;/span&gt;
            &lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;
            WemartJSBridgeWebView&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;startupMessage&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;
        &lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在&lt;strong&gt;onPageFinished&lt;/strong&gt;里面控制了在加载正常页面时只执行一次, 因为onPageFinished有可能被多次执行(这是一个坑).&lt;/p&gt;
&lt;p&gt;这个方法主要是做了两件事:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;让webview加载之前**webView.initContext(url)**设置&lt;a href=&#34;http://www.wemart.cn/v2/sdk/WemartJSBridge.js&#34;   target=&#34;_blank&#34;  &gt;js文件&lt;/a&gt;. 这个js文件的作用就是用来和客户端进行交互, 有兴趣可以阅读一下.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;将页面加载完成之前的JsBridge的消息队列拿出来全部消耗掉(同步执行js语句), 并在最后将队列置为null.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;shouldoverrideurlloading&#34;&gt;shouldOverrideUrlLoading&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#555;font-weight:bold&#34;&gt;@Override&lt;/span&gt;
&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#902000&#34;&gt;boolean&lt;/span&gt; &lt;span style=&#34;color:#06287e&#34;&gt;shouldOverrideUrlLoading&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;WebView view&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; String url&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;try&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
        url &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; URLDecoder&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;decode&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;url&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;UTF-8&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;);&lt;/span&gt;
    &lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;catch&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;UnsupportedEncodingException e&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
        e&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;printStackTrace&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;();&lt;/span&gt;
    &lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;
    Logger&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;WemartJSBridge&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;\u8c03\u7528 shouldOverrideUrlLoading, url = &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; url&lt;span style=&#34;color:#666&#34;&gt;);&lt;/span&gt;
    &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;url&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;startsWith&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;wtjs://return/&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
        WemartJSBridgeWebView&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;handlerReturnData&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;url&lt;span style=&#34;color:#666&#34;&gt;);&lt;/span&gt;
        &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;(!&lt;/span&gt;url&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;startsWith&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;wtjs://&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;super&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;shouldOverrideUrlLoading&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;view&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; url&lt;span style=&#34;color:#666&#34;&gt;);&lt;/span&gt;
    &lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
        WemartJSBridgeWebView&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;flushMessageQueue&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;();&lt;/span&gt;
        &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在&lt;strong&gt;shouldOverrideUrlLoading&lt;/strong&gt;里面分别处理了以&lt;code&gt;wtjs://&lt;/code&gt;开头的后面跟的&lt;code&gt;return&lt;/code&gt;和&lt;code&gt;非return&lt;/code&gt;这两种scheme.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;return&lt;/code&gt;表示返回数据, 然后调起相应的回调事件进行响应;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;非return&lt;/code&gt;表示请求事件(一般来自于原生需要发起), 会注册一个回调事情然后在&lt;code&gt;return&lt;/code&gt;时被响应掉. &lt;code&gt;非return&lt;/code&gt;scheme可以在&lt;code&gt;dispatchMessage(JSBridgeMessage )&lt;/code&gt;执行后被主动调起, 所以可以用于原生向网页端请求数据.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;hellip;&amp;hellip;(大概逻辑是这样, 里面的交互细节就不讲了)&lt;/p&gt;
&lt;h3 id=&#34;总结&#34;&gt;总结&lt;/h3&gt;
&lt;p&gt;整体实现JsBridge的方式很不错, 功能完备. 但其内部实现过于复杂, 扩展性很差, 性能开销有待优化.&lt;/p&gt;</description>
        
      </item>
    <item>
        <title>Android网络框架封装的认知</title>
        <link>https://qbeenslee.com/article/thinking-of-net-framework-on-android/</link>
        <pubDate>Tue, 27 Oct 2015 15:04:09 +0800</pubDate>
        <author>qbeenslee</author>
        <guid>https://qbeenslee.com/article/thinking-of-net-framework-on-android/</guid>
        
          <description>&lt;p&gt;在开发应用中网络模块是项目中很重要和复杂的一部分. 从零开始写一个网络请求框架是一件吃力不讨好的事情, 也有重复造轮子的嫌疑. github上有很多优秀的开源网络请求框架例如:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/square/retrofit&#34;   target=&#34;_blank&#34;  &gt;retrofit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/square/okhttp&#34;   target=&#34;_blank&#34;  &gt;okhttp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://android.googlesource.com/platform/frameworks/volley&#34;   target=&#34;_blank&#34;  &gt;volley&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我们需要在这些第三方框架的基础上再封装, 目的是为了实现: 统一处理, 简化调度. 下面就是年青人对网络框架封装一些粗鄙的认知.&lt;/p&gt;
&lt;h3 id=&#34;1对外调用接口统一&#34;&gt;1.对外调用接口统一&lt;/h3&gt;
&lt;p&gt;项目快速的开发过程中没有认真做框架选型调研, 在后期开发中随着框架不足的暴露, 迫使开发者去使用新的框架. 但替换旧框架的过程肯定是异常艰辛的, 所以有必要在前期就封装一套统一稳健的对外调用接口.&lt;/p&gt;
&lt;p&gt;这有点类似于BaseActivity的作用, 其实可以理解这层封装是一个&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F&#34;   target=&#34;_blank&#34;  &gt;代理模式&lt;/a&gt;. 实现过程可以更粗暴, 直接将逻辑代码写在调用类中, 如果要替换新的新的网络框架也是粗暴重写.&lt;/p&gt;
&lt;p&gt;对外调用方式封装可以按开发者喜好来, 比如我比较喜欢链式编程, 那我可以构建一个&lt;a href=&#34;https://en.wikipedia.org/wiki/Fluent_interface&#34;   target=&#34;_blank&#34;  &gt;Fluent interface&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;Query&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;api&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;api&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt;
     &lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;put&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;key&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; value&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt;
     &lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;put&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;key&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; file&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt;
     &lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;post&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;new&lt;/span&gt; Query&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;OnQuery&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
            &lt;span style=&#34;color:#555;font-weight:bold&#34;&gt;@Override&lt;/span&gt;
            &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#902000&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#06287e&#34;&gt;onFailed&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;Error e&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
            	&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;//...
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;
            &lt;span style=&#34;color:#555;font-weight:bold&#34;&gt;@Override&lt;/span&gt;
            &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#902000&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#06287e&#34;&gt;onSuccess&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;Model data&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
            	&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;//...
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;
     &lt;span style=&#34;color:#666&#34;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;2数据解析和业务实现抽离&#34;&gt;2.数据解析和业务实现抽离&lt;/h3&gt;
&lt;p&gt;老是听到程序员抱怨产品改需求(说的就是我自己), 产品改需求就会在一定程度上实地程序员的辛苦变成徒劳. 也不尽然, 需求的改变更多的是发生在业务逻辑和页面实现上, 但服务器接口是相对稳定的, 所以可以将数据解析单独抽离出来. 在一个单独的类中实现数据解析封装, 这样即符合单一职责原则(&lt;a href=&#34;https://zh.wikipedia.org/zh-cn/%E5%8D%95%E4%B8%80%E5%8A%9F%E8%83%BD%E5%8E%9F%E5%88%99&#34;   target=&#34;_blank&#34;  &gt;SRP&lt;/a&gt;)也可以实现代码重用(&lt;a href=&#34;https://en.wikipedia.org/wiki/Don%27t_repeat_yourself&#34;   target=&#34;_blank&#34;  &gt;DRY&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;还有在面临的解析的数据是多层级多广度的, 而在网络请求做解析抽离后只能返回单个对象时, 可以在解析时组装业务层需要的Bean(业务)实例并返回. 当解析数据容量很大或者需要做数据缓存等耗时操作需要将整个过程异步处理, 然后再返回给UI线程. &lt;em&gt;永远不要相信服务器不会挂&lt;/em&gt;, 就算是服务器挂了我们客户端也要接住掉下来的锅. 不要服务器数据返回数据一有问题客户端就挂了. 所以要在解析过程中做异常处理或者添加数据校验.&lt;/p&gt;
&lt;p&gt;关于数据实体类, 我见到的大部分的项目中实体类中有很多get/set的方法，很没有必要. 一是浪费人力(虽然Android Studio可以自动生成代码), 二是新增性能消耗. 在开发中大部分的实体类只是为了读取一下数值, 完全没有必要添加访问控制(真的需要时可以酌情使用), 推荐直接使用public暴露出来(具体可以查看google给出的&lt;a href=&#34;http://developer.android.com/training/articles/perf-tips.html#GettersSetters&#34;   target=&#34;_blank&#34;  &gt;建议&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;这里给出一种外部调用的范例:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;解析类&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;/**
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;* 登录信息解析类, 包括绑定接口(api)和数据解析(parse)
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;**/&lt;/span&gt;
&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#0e84b5;font-weight:bold&#34;&gt;LoginQuery&lt;/span&gt; &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;extends&lt;/span&gt; Query&lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&lt;/span&gt;LoginModel&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;

    &lt;span style=&#34;color:#555;font-weight:bold&#34;&gt;@Override&lt;/span&gt;
    &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;public&lt;/span&gt; String &lt;span style=&#34;color:#06287e&#34;&gt;api&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;this.is.request.api&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#555;font-weight:bold&#34;&gt;@Override&lt;/span&gt;
    &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;protected&lt;/span&gt; LoginModel &lt;span style=&#34;color:#06287e&#34;&gt;parse&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;String rawJsonData&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#902000&#34;&gt;boolean&lt;/span&gt; isFailure&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;return&lt;/span&gt; parseJson&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;rawJsonData&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; LoginModel&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;//这是解析过程
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;数据模型&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;/**
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;* 登录接口返回数据模型
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;**/&lt;/span&gt;
&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#0e84b5;font-weight:bold&#34;&gt;LoginModel&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;/**
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;    * 如果服务端字段定义不符合java规范
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;    * 或者工程要代码混淆时可以使用Gson注解控制
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;    **/&lt;/span&gt;
    &lt;span style=&#34;color:#555;font-weight:bold&#34;&gt;@SerializedName&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;user_name&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;public&lt;/span&gt; String userName&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;

    &lt;span style=&#34;color:#555;font-weight:bold&#34;&gt;@SerializedName&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;user_id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;public&lt;/span&gt; String userId&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;

    &lt;span style=&#34;color:#555;font-weight:bold&#34;&gt;@SerializedName&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;access_token&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;public&lt;/span&gt; String accessToken&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;调用&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;/**
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;* 返回的数据类型有泛型约束
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;**/&lt;/span&gt;
LoginQuery&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;with&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;context&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt;
          &lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;put&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;key&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt;value&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt;
          &lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;post&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;new&lt;/span&gt; Query&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;Callback&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&lt;/span&gt;LoginModel&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;(){&lt;/span&gt;
          	&lt;span style=&#34;color:#555;font-weight:bold&#34;&gt;@Override&lt;/span&gt;
            &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#902000&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#06287e&#34;&gt;onFailed&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;Error e&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
            	&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;//...
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;
            &lt;span style=&#34;color:#555;font-weight:bold&#34;&gt;@Override&lt;/span&gt;
            &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#902000&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#06287e&#34;&gt;onSuccess&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;LoginModel data&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
            	&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;//...
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;
          &lt;span style=&#34;color:#666&#34;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;3规范&#34;&gt;3.规范&lt;/h3&gt;
&lt;p&gt;规范是个好事, 最好还是在做事情之前就定好了(就开发而言).&lt;/p&gt;
&lt;p&gt;对于http接口的一些规范, 就是数据包规范. 比如: 接口API要拼接在url里; request parameter body里面就好就只存在和业务相关的请求参数, 其他基础数据可以放在header中.&lt;/p&gt;
&lt;p&gt;还有就是千万不要在Fragment的&lt;code&gt;onCreate()&lt;/code&gt;中发起网络请求, 一般认为网络请求消耗的时间是会远远大于界面绘制的时间. 然后在网络请求返回时以为视图已经初始化完成, 但真的能保证吗?如果我在封装架构里添加一层网络状态检查, 没有网络就直接回调. 接下来会发生什么, 就看个人修养了. 另外提醒一下, 如果是在Fragment里发起的网络请求在回调回来之后最好要做生命周期判断, 否则有可能报&lt;code&gt;IllegalStateException&lt;/code&gt;异常.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;new&lt;/span&gt; Query&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;Callback&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&lt;/span&gt;LoginModel&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;(){&lt;/span&gt;
              &lt;span style=&#34;color:#555;font-weight:bold&#34;&gt;@Override&lt;/span&gt;
            &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#902000&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#06287e&#34;&gt;onFailed&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;Error e&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
                &lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;//...
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;
            &lt;span style=&#34;color:#555;font-weight:bold&#34;&gt;@Override&lt;/span&gt;
            &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#902000&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#06287e&#34;&gt;onSuccess&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;LoginModel data&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
               &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;final&lt;/span&gt; Activity activity &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; getActivity&lt;span style=&#34;color:#666&#34;&gt;();&lt;/span&gt;
               &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;activity &lt;span style=&#34;color:#666&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;null&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;!&lt;/span&gt;activity&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;isFinishing&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;())&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
              	&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;//页面没有被回收
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&lt;/span&gt;               	&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;//...
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&lt;/span&gt;               &lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;
            &lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;
        &lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;ps: 外部调用我都想好了, 谁来写内部实现呢(算了近期我打算自己去实现一个) &amp;hellip;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;pps: 毕竟是年青人, 说得不好的要给他指出来.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;p&gt;20160415更新:&lt;/p&gt;
&lt;p&gt;网络库封装地址: &lt;a href=&#34;https://github.com/qbeenslee/http-query&#34;   target=&#34;_blank&#34;  &gt;http-query&lt;/a&gt;&lt;/p&gt;</description>
        
      </item>
    <item>
        <title>使用C#编写的轻量级图片库</title>
        <link>https://qbeenslee.com/article/a-lightweight-gallery-written-by-c-sharp/</link>
        <pubDate>Wed, 11 Dec 2013 23:50:01 +0800</pubDate>
        <author>qbeenslee</author>
        <guid>https://qbeenslee.com/article/a-lightweight-gallery-written-by-c-sharp/</guid>
        
          <description>&lt;p&gt;效果图如下:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/Rd8Nkz7.jpg&#34; alt=&#34;效果图&#34; width=&#34;400px&#34; /&gt;&lt;/p&gt;
&lt;p&gt;前段日子编写了一个图片库的小程序,遇到了很多问题.这里罗列一下:&lt;/p&gt;
&lt;h2 id=&#34;1-如何实现拖动无标题栏窗口&#34;&gt;1. 如何实现拖动无标题栏窗口&lt;/h2&gt;
&lt;p&gt;即当form的FormBorderStyle=None时,窗口如何响应鼠标拖动事件.&lt;br /&gt;
实现代码如下:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt;&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#902000&#34;&gt;int&lt;/span&gt; WM_SYSCOMMAND = &lt;span style=&#34;color:#40a070&#34;&gt;0&lt;/span&gt;x0112;
&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#902000&#34;&gt;int&lt;/span&gt; SC_MOVE = &lt;span style=&#34;color:#40a070&#34;&gt;0&lt;/span&gt;xF010;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;/*移动信息*/&lt;/span&gt; 
&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;/*表示鼠标在窗口标题栏时的系统信息*/&lt;/span&gt;
&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#902000&#34;&gt;int&lt;/span&gt; HTCAPTION = &lt;span style=&#34;color:#40a070&#34;&gt;0&lt;/span&gt;x0002;
&lt;span style=&#34;color:#4070a0&#34;&gt;[DllImport(&amp;#34;user32.dll&amp;#34;)]&lt;/span&gt; 
&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;extern&lt;/span&gt; &lt;span style=&#34;color:#902000&#34;&gt;bool&lt;/span&gt; SendMessage(IntPtr hwnd, &lt;span style=&#34;color:#902000&#34;&gt;int&lt;/span&gt; wMsg, &lt;span style=&#34;color:#902000&#34;&gt;int&lt;/span&gt; wParam, &lt;span style=&#34;color:#902000&#34;&gt;int&lt;/span&gt; lParam);
&lt;span style=&#34;color:#4070a0&#34;&gt;[DllImport(&amp;#34;user32.dll&amp;#34;)]&lt;/span&gt; 
&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;extern&lt;/span&gt; &lt;span style=&#34;color:#902000&#34;&gt;bool&lt;/span&gt; ReleaseCapture(); 
&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;/*响应鼠标单击事件*/&lt;/span&gt;
&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;void&lt;/span&gt; Form1_MouseDown(&lt;span style=&#34;color:#902000&#34;&gt;object&lt;/span&gt; sender, MouseEventArgs e) 
{ 
	&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;/*鼠标相对于窗体的坐标*/&lt;/span&gt;
	&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;if&lt;/span&gt; (e.Location.Y &amp;lt;= &lt;span style=&#34;color:#40a070&#34;&gt;36&lt;/span&gt;) {
		ReleaseCapture();
		SendMessage(&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;this&lt;/span&gt;.Handle, WM_SYSCOMMAND, SC_MOVE + HTCAPTION, &lt;span style=&#34;color:#40a070&#34;&gt;0&lt;/span&gt;); 
	} 
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;2-如何截取图片缩略图&#34;&gt;2. 如何截取图片缩略图&lt;/h2&gt;
&lt;p&gt;在网上查到两种资料,&lt;br /&gt;
一种是Image newPic = pictrue.GetThumbnailImage(Width, Height, null, IntPtr.Zero);&lt;br /&gt;
另一种是Image newPic = new System.Drawing.Bitmap(pictrue, Width, Height)&lt;br /&gt;
其中pictrue为原图片,Width和Height为裁剪后图片的宽高&lt;br /&gt;
经过实际操作发现当原图为高清图的时候,使用pictrue.GetThumbnailImage()截取的缩略图会严重失真,而使用System.Drawing.Bitmap()可以较为真实的反映原图的效果&lt;/p&gt;
&lt;h2 id=&#34;3-如何缩放图片&#34;&gt;3. 如何缩放图片&lt;/h2&gt;
&lt;p&gt;使用何种尺寸去裁剪才能尽量的反映原图的效果.我的目标是不改变原图的宽高比例,在外框的限制下成比例缩小,若原图的宽高都小于外框则不进行裁剪.&lt;/p&gt;
&lt;p&gt;具体代码如下:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt;    &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;private&lt;/span&gt; Image dealPic(String picPath) {
    	Image pictrue = Image.FromFile(picPath);
    	&lt;span style=&#34;color:#902000&#34;&gt;int&lt;/span&gt; tmpW = PIC_WIDTH, tmpH = PIC_HEIGHT;
    	&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;/*PIC_WIDTH为外框的限制宽度,PIC_HEIGHT为外框的限制高度,为全局变量*/&lt;/span&gt;
    	&lt;span style=&#34;color:#902000&#34;&gt;double&lt;/span&gt; rate;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;//缩放比例
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&lt;/span&gt;    	&lt;span style=&#34;color:#902000&#34;&gt;int&lt;/span&gt; width = pictrue.Size.Width;
    	&lt;span style=&#34;color:#902000&#34;&gt;int&lt;/span&gt; height = pictrue.Size.Height;
    	size = pictrue.Size;
    	&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;/*图像裁剪处理*/&lt;/span&gt;
    	&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;if&lt;/span&gt; (width &amp;gt; PIC_WIDTH || height &amp;gt; PIC_HEIGHT)
    	{
    		&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;if&lt;/span&gt; ((&lt;span style=&#34;color:#902000&#34;&gt;double&lt;/span&gt;)(width * &lt;span style=&#34;color:#40a070&#34;&gt;1.0&lt;/span&gt; / height) &amp;lt; &lt;span style=&#34;color:#40a070&#34;&gt;1.5&lt;/span&gt;)&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;//过高
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&lt;/span&gt;    		{
    			rate = height * &lt;span style=&#34;color:#40a070&#34;&gt;1.0&lt;/span&gt; / tmpH;
    			tmpW = (&lt;span style=&#34;color:#902000&#34;&gt;int&lt;/span&gt;)(width * &lt;span style=&#34;color:#40a070&#34;&gt;1.0&lt;/span&gt; / rate);
    		}
    		&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;else&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;//过宽
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&lt;/span&gt;    		{
    			rate = width * &lt;span style=&#34;color:#40a070&#34;&gt;1.0&lt;/span&gt; / tmpW;
    			tmpH = (&lt;span style=&#34;color:#902000&#34;&gt;int&lt;/span&gt;)(height * &lt;span style=&#34;color:#40a070&#34;&gt;1.0&lt;/span&gt; / rate);
    		}
    	} &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;else&lt;/span&gt;
     	&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;return&lt;/span&gt; pictrue;
    	Image newPic = pictrue.GetThumbnailImage(tmpW, tmpH, &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;null&lt;/span&gt;, IntPtr.Zero);&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;//绘制底质量图 
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&lt;/span&gt;    	&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;/*释放图片内存*/&lt;/span&gt;
    	pictrue.Dispose();
    	&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;return&lt;/span&gt; newPic;
    }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;具体可以参考本人源代码.&lt;br /&gt;
新手写C#,代码不是很好,如有什么意见请留言.&lt;br /&gt;
个人认为本程序中最大的一个问题是载入大量图片的时候比较卡顿,可以考虑多线程解决.Ps:本人多线程没学好&lt;br /&gt;
还有图片还不支持鼠标滚动条缩放大小,这个我还没有头绪&amp;hellip;&lt;br /&gt;
知道的朋友可以提醒一下,谢谢&lt;br /&gt;
源代码及程序,下载链接 &lt;a href=&#34;http://sdrv.ms/IPchCt&#34;   target=&#34;_blank&#34;  &gt;http://sdrv.ms/IPchCt&lt;/a&gt;&lt;/p&gt;</description>
        
      </item>
    <item>
        <title>sunday算法</title>
        <link>https://qbeenslee.com/article/algorithm-sunday/</link>
        <pubDate>Sun, 17 Nov 2013 00:22:43 +0800</pubDate>
        <author>qbeenslee</author>
        <guid>https://qbeenslee.com/article/algorithm-sunday/</guid>
        
          <description>&lt;p&gt;sunday算法是字符串模式匹配算法,是在BM算法上的优化.&lt;br /&gt;
&lt;strong&gt;提出者&lt;/strong&gt;: Daniel M.Sunday(1990)&lt;br /&gt;
&lt;strong&gt;核心思想&lt;/strong&gt;:在匹配过程中, 模式串并不被要求一定要按从左向右进行比较还是从右向左进行比较, 它在发现不匹配时, 算法能跳过尽可能多的字符以进行下一步的匹配, 从而提高了匹配效率.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;简单匹配过程&lt;/strong&gt;:&lt;br /&gt;
文本为:&amp;ldquo;substring searching algorithm&amp;rdquo;&lt;br /&gt;
字串为:&amp;ldquo;search&amp;rdquo;&lt;br /&gt;
刚开始时, 把子串与文本左边对齐:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;substring searching algorithm
search
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;结果在第二个字符处发现不匹配, 于是要把子串往后移动. 但是该移动多少呢？&lt;br /&gt;
这就是各种算法各显神通的地方了, 最简单的做法是移动一个字符位置;&lt;/p&gt;
&lt;p&gt;KMP是利用已经匹配部分的信息来移动;BM算法是做反向比较, 并根据已经匹配的部分来确定移动量.&lt;br /&gt;
这里要介绍的方法是看紧跟在当前子串之后的那个字符 （第一个字符串中的&amp;rsquo;i&amp;rsquo;).&lt;br /&gt;
显然, 不管移动多少, 这个字符是肯定要参加下一步的比较的.&lt;br /&gt;
也就是说, 如果下一步匹配到了, 这个字符必须在子串内.&lt;/p&gt;
&lt;p&gt;所以, 可以移动子串, 使子串中的最右边的这个字符与它对齐. 现在子串&amp;rsquo;search&amp;rsquo;中并不存在&amp;rsquo;i&amp;rsquo;, 则说明可以直接跳过一大片, 从&amp;rsquo;i&amp;rsquo;之后的那个字符开始作下一步的比较, 如下:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;substring searching algorithm
search
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;比较的结果, 第一个字符就不匹配, 再看子串后面的那个字符, 是&amp;rsquo;r&amp;rsquo;,它在子&lt;br /&gt;
串中出现在倒数第三位, 于是把子串向后移动三位, 使两个&amp;rsquo;r&amp;rsquo;对齐, 如下:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;substring searching algorithm
search
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这次匹配成功了！&lt;br /&gt;
上面一段例子摘自:http://blog.chinaunix.net/uid-25513153-id-225240.html&lt;br /&gt;
C语言实现:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;/*************************** 
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;sunday algorithm
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;By: QbeensLee
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;Date:2013/11/17
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;****************************/&lt;/span&gt;
&lt;span style=&#34;color:#007020&#34;&gt;#include&lt;/span&gt;&lt;span style=&#34;color:#007020&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#007020&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#007020&#34;&gt;#include&lt;/span&gt;&lt;span style=&#34;color:#007020&#34;&gt;&amp;lt;cstring&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#007020&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#007020&#34;&gt;#include&lt;/span&gt;&lt;span style=&#34;color:#007020&#34;&gt;&amp;lt;cstdlib&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#007020&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#007020&#34;&gt;#define LIMITED 1000000
&lt;/span&gt;&lt;span style=&#34;color:#007020&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#902000&#34;&gt;char&lt;/span&gt; a[LIMITED],b[LIMITED];
&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;inline&lt;/span&gt; &lt;span style=&#34;color:#902000&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#06287e&#34;&gt;sunday&lt;/span&gt;(&lt;span style=&#34;color:#902000&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt;text, &lt;span style=&#34;color:#902000&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt;key)
{
	&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;if&lt;/span&gt;(&lt;span style=&#34;color:#666&#34;&gt;!&lt;/span&gt;(&lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt;key))&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#40a070&#34;&gt;0&lt;/span&gt;;
	&lt;span style=&#34;color:#902000&#34;&gt;int&lt;/span&gt; ans&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;0&lt;/span&gt;,tag,size_match;
	&lt;span style=&#34;color:#902000&#34;&gt;int&lt;/span&gt; i,limit,shift[&lt;span style=&#34;color:#40a070&#34;&gt;256&lt;/span&gt;],len_text&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;strlen(text),len_key&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;strlen(key); 
	&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;if&lt;/span&gt;(len_key&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt;len_text)
		&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#40a070&#34;&gt;0&lt;/span&gt;;
	&lt;span style=&#34;color:#902000&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt;match;
	&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;for&lt;/span&gt;(i&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;0&lt;/span&gt;;i&lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;256&lt;/span&gt;;i&lt;span style=&#34;color:#666&#34;&gt;++&lt;/span&gt;)
		shift[i]&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;len_key&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;1&lt;/span&gt;;
	&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;for&lt;/span&gt;(i&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;0&lt;/span&gt;;i&lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&lt;/span&gt;len_key;&lt;span style=&#34;color:#666&#34;&gt;++&lt;/span&gt;i)
		shift[&lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt;(key&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;i)]&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;len_key&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;i;
	limit&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;len_text&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;len_key&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;1&lt;/span&gt;;
	&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;for&lt;/span&gt;(i&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;0&lt;/span&gt;;i&lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&lt;/span&gt;limit;i&lt;span style=&#34;color:#666&#34;&gt;+=&lt;/span&gt;shift[text[len_key&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;i]])
	{
		&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;if&lt;/span&gt;(&lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt;(text&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;i)&lt;span style=&#34;color:#666&#34;&gt;==*&lt;/span&gt;key)
		{
			match&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;text&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;i&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;1&lt;/span&gt;;
			size_match&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;1&lt;/span&gt;;
			&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;do&lt;/span&gt;
			{
				&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;if&lt;/span&gt;(size_match&lt;span style=&#34;color:#666&#34;&gt;==&lt;/span&gt;len_key)
					ans&lt;span style=&#34;color:#666&#34;&gt;++&lt;/span&gt;;
			}&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;while&lt;/span&gt;((&lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt;match&lt;span style=&#34;color:#666&#34;&gt;++&lt;/span&gt;)&lt;span style=&#34;color:#666&#34;&gt;==&lt;/span&gt;key[size_match&lt;span style=&#34;color:#666&#34;&gt;++&lt;/span&gt;]);
		}
	}
	&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;return&lt;/span&gt; ans;
}

&lt;span style=&#34;color:#902000&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#06287e&#34;&gt;main&lt;/span&gt;()
{
	&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;//freopen(&amp;#34;a.in&amp;#34;,&amp;#34;r&amp;#34;,stdin);
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#902000&#34;&gt;int&lt;/span&gt; n;
	scanf(&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;%d%*c&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#666&#34;&gt;&amp;amp;&lt;/span&gt;n);
	&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;while&lt;/span&gt;(n&lt;span style=&#34;color:#666&#34;&gt;--&lt;/span&gt;)
	{
		gets(a);
		gets(b);
		printf(&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;%d&lt;/span&gt;&lt;span style=&#34;color:#4070a0;font-weight:bold&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;&lt;/span&gt;,sunday(b,a));
	}
	&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#40a070&#34;&gt;0&lt;/span&gt;; 
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;但在ACM的OJ上, 实用sunday算法成功解决KMP算法是不太容易的,往往会超时, 这因为这些题目摆明了是要用KMP算法做的.&lt;/p&gt;
&lt;p&gt;KMP比较适合在文本中大量重复出现子串的匹配, So~ ~ OJ上的测试数据都是对KMP算法有利.&lt;/p&gt;
&lt;p&gt;但在实用性和易懂性上讲,我还是比较喜欢sunday算法的.&lt;/p&gt;
&lt;p&gt;推荐阅读:&lt;br /&gt;
&lt;a href=&#34;http://www.inf.fh-flensburg.de/lang/algorithmen/pattern/sundayen.html&#34;   target=&#34;_blank&#34;  &gt;Sunday algorithm&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;http://www-igm.univ-mlv.fr/~lecroq/string/node19.html&#34;   target=&#34;_blank&#34;  &gt;Quick Search algorithm&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;http://d.wanfangdata.com.cn/periodical_jsjgc200907042.aspx&#34;   target=&#34;_blank&#34;  &gt;改进的Sunday模式匹配算法&lt;/a&gt;&lt;/p&gt;</description>
        
      </item>
    <item>
        <title>纯C解决括号匹配问题</title>
        <link>https://qbeenslee.com/article/deal-brackets-match-problem-by-c/</link>
        <pubDate>Tue, 15 Oct 2013 00:41:56 +0800</pubDate>
        <author>qbeenslee</author>
        <guid>https://qbeenslee.com/article/deal-brackets-match-problem-by-c/</guid>
        
          <description>&lt;p&gt;先看问题描述&lt;br /&gt;
描述&lt;br /&gt;
假设一个算术表达式中可以包含三种括号：圆括号“(”和“)” 、方圆括号“[”和“]”、和花括号“{”和“}”，且这三种括号可按任意的次序嵌套使用(如：…[…{…}…[…]…]…[…]…(…)…)。编写判别给定表达式中所含括号是否正确配对出现的算法。若正确配对则输出yes，否则输出no。&lt;/p&gt;
&lt;p&gt;输入&lt;/p&gt;
&lt;p&gt;测试数据有多组，处理到文件尾。每组测试数据在同一行中输入不超过50个字符的算术表达式(不要求算术表达式一定合法)。&lt;/p&gt;
&lt;p&gt;输出&lt;/p&gt;
&lt;p&gt;根据算术表达式中的括号是否正确配对输出yes或no。&lt;/p&gt;
&lt;p&gt;样例输入&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;a*[b+c*{d-e}+5*6-[7*8]*9]+[3*10]+5*18*(3*e)+5&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;3-[4+c*{9-5}+a*6-[d*e]+3&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;3-{[((()))]}+3&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;样例输出&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;yes&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;no&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;yes&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;p&gt;鄙人纯C代码&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;color:#007020&#34;&gt;#include&lt;/span&gt;&lt;span style=&#34;color:#007020&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#007020&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#007020&#34;&gt;#include&lt;/span&gt;&lt;span style=&#34;color:#007020&#34;&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#007020&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#007020&#34;&gt;#define MAX 101
&lt;/span&gt;&lt;span style=&#34;color:#007020&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;typedef&lt;/span&gt; &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;struct&lt;/span&gt; node {
	&lt;span style=&#34;color:#902000&#34;&gt;char&lt;/span&gt; flag;
	&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;struct&lt;/span&gt; node &lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt;next;
}linklist;

linklist&lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#06287e&#34;&gt;push&lt;/span&gt;(linklist &lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt;last,&lt;span style=&#34;color:#902000&#34;&gt;char&lt;/span&gt; w)
{
	linklist&lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt;p&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;(linklist&lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt;)malloc(&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;sizeof&lt;/span&gt;(linklist));
	 p&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;flag&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;w;
	 p&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;next&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;last;
	 &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;return&lt;/span&gt; p;
}
&lt;span style=&#34;color:#902000&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#06287e&#34;&gt;main&lt;/span&gt;()
{
	&lt;span style=&#34;color:#902000&#34;&gt;char&lt;/span&gt; a[MAX];
	&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;while&lt;/span&gt;(gets(a))
	{
		&lt;span style=&#34;color:#902000&#34;&gt;bool&lt;/span&gt; result&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;0&lt;/span&gt;;
		&lt;span style=&#34;color:#902000&#34;&gt;int&lt;/span&gt; i;
		linklist&lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt;p&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;push(&lt;span style=&#34;color:#007020&#34;&gt;NULL&lt;/span&gt;,&lt;span style=&#34;color:#007020&#34;&gt;NULL&lt;/span&gt;);
		&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;for&lt;/span&gt;(i&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;0&lt;/span&gt;;a[i];i&lt;span style=&#34;color:#666&#34;&gt;++&lt;/span&gt;)
		{
			&lt;span style=&#34;color:#902000&#34;&gt;int&lt;/span&gt; x&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;2&lt;/span&gt;;
			&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;switch&lt;/span&gt; (a[i])
			{
			&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;(&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt;x&lt;span style=&#34;color:#666&#34;&gt;--&lt;/span&gt;;
			&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;[&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt;
			&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;{&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt;
					p&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;push(p,a[i]&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;x);
					&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;break&lt;/span&gt;;
			&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;)&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt;
			&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;]&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt;
			&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;}&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt;
				{
				&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;if&lt;/span&gt;(p&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;next&lt;span style=&#34;color:#666&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#007020&#34;&gt;NULL&lt;/span&gt;) &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;goto&lt;/span&gt; END;
				&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;/*这里缺了free(空间),要小心*/&lt;/span&gt;
				&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;else&lt;/span&gt;
				{
					&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;if&lt;/span&gt;(a[i]&lt;span style=&#34;color:#666&#34;&gt;==&lt;/span&gt;p&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;flag)
						p&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;p&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;next;
					&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;else&lt;/span&gt;
						&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;goto&lt;/span&gt; END;
				}
			}
		}
	}
	&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;if&lt;/span&gt;(p&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;next&lt;span style=&#34;color:#666&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#007020&#34;&gt;NULL&lt;/span&gt;)
		result&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;1&lt;/span&gt;;
&lt;span style=&#34;color:#002070;font-weight:bold&#34;&gt;END&lt;/span&gt;:puts(result&lt;span style=&#34;color:#666&#34;&gt;?&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;yes&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;no&amp;#34;&lt;/span&gt;);
	}
&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#40a070&#34;&gt;0&lt;/span&gt;;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;还有C++版的代码&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;color:#007020&#34;&gt;#include&lt;/span&gt;&lt;span style=&#34;color:#007020&#34;&gt;&amp;lt;stack&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#007020&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#007020&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;namespace&lt;/span&gt; std;
&lt;span style=&#34;color:#902000&#34;&gt;bool&lt;/span&gt; &lt;span style=&#34;color:#06287e&#34;&gt;GetResult&lt;/span&gt;(&lt;span style=&#34;color:#902000&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt;a)
{
	stack&lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#902000&#34;&gt;char&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt;p;
	&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;for&lt;/span&gt;(&lt;span style=&#34;color:#902000&#34;&gt;int&lt;/span&gt; i&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;0&lt;/span&gt;,x;a[i];i&lt;span style=&#34;color:#666&#34;&gt;++&lt;/span&gt;)
	{
		x&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;2&lt;/span&gt;;
		&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;switch&lt;/span&gt; (a[i])
		{
			&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;(&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt;x&lt;span style=&#34;color:#666&#34;&gt;--&lt;/span&gt;;
			&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;[&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt;
			&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;{&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt;p.push(a[i]&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;x);&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;break&lt;/span&gt;;
			&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;)&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt;
			&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;]&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt;
			&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;}&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt; 
				{
				&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;if&lt;/span&gt;(&lt;span style=&#34;color:#666&#34;&gt;!&lt;/span&gt;p.empty()&lt;span style=&#34;color:#666&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;a[i]&lt;span style=&#34;color:#666&#34;&gt;==&lt;/span&gt;p.top())
					p.pop();
				&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;else&lt;/span&gt;
					&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#40a070&#34;&gt;0&lt;/span&gt;;
				}
			}
		}
	&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;return&lt;/span&gt; p.empty();
}
&lt;span style=&#34;color:#902000&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#06287e&#34;&gt;main&lt;/span&gt;() 
{
	&lt;span style=&#34;color:#902000&#34;&gt;char&lt;/span&gt; string_buffer[&lt;span style=&#34;color:#40a070&#34;&gt;150&lt;/span&gt;];
	&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;while&lt;/span&gt;(gets(string_buffer)) 
		puts(GetResult(string_buffer)&lt;span style=&#34;color:#666&#34;&gt;?&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;yes&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;no&amp;#34;&lt;/span&gt;);
	&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#40a070&#34;&gt;0&lt;/span&gt;;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        
      </item>
    <item>
        <title>C&#43;&#43;写的文本颠倒代码</title>
        <link>https://qbeenslee.com/article/reverse-text-file-by-cpp/</link>
        <pubDate>Mon, 23 Sep 2013 01:02:46 +0800</pubDate>
        <author>qbeenslee</author>
        <guid>https://qbeenslee.com/article/reverse-text-file-by-cpp/</guid>
        
          <description>&lt;blockquote&gt;
&lt;p&gt;（过程：从名为“in.txt”中读取信息，颠倒输出到“out.txt”中。）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;/* C++ */&lt;/span&gt;
&lt;span style=&#34;color:#007020&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#007020&#34;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#007020&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#007020&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#007020&#34;&gt;&amp;lt;fstream&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#007020&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#007020&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#007020&#34;&gt;&amp;lt;ctime&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#007020&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#007020&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#902000&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#06287e&#34;&gt;main&lt;/span&gt;()
{
	clock_t start, finish;
	start &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; clock();
	&lt;span style=&#34;color:#902000&#34;&gt;long&lt;/span&gt;		len &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;1L&lt;/span&gt;;                                                      &lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;/* 与文件头的距离 */&lt;/span&gt;
	&lt;span style=&#34;color:#902000&#34;&gt;char&lt;/span&gt;		tmp, last;                                                      &lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;/* tmp记录当刻值,last记录上一个值 */&lt;/span&gt;
	&lt;span style=&#34;color:#902000&#34;&gt;bool&lt;/span&gt;		tag &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#007020&#34;&gt;false&lt;/span&gt;, flag &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#007020&#34;&gt;false&lt;/span&gt;;                                      &lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;/* tag用于标记第二个&amp;#39;\n&amp;#39;,flag用于标记汉字 */&lt;/span&gt;
	std&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;ifstream	inp( &lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;in.txt&amp;#34;&lt;/span&gt;, std&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;ios&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;in );
	std&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;ofstream	oup( &lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;out.txt&amp;#34;&lt;/span&gt;, std&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;ios&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;out );
	&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;if&lt;/span&gt; ( inp.fail() &lt;span style=&#34;color:#666&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#007020&#34;&gt;true&lt;/span&gt; )
	{
		std&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;cout &lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;please make sure the file is exist !&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; std&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;endl; exit( &lt;span style=&#34;color:#40a070&#34;&gt;1&lt;/span&gt; );
	}
	inp.seekg( len, inp.end );                                                      &lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;/* 移至文件尾 */&lt;/span&gt;
	len &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; (&lt;span style=&#34;color:#902000&#34;&gt;long&lt;/span&gt;) inp.tellg();                                                       &lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;/* 获取文件尾距离头的距离 */&lt;/span&gt;
	std&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;cerr &lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;A total of &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; len &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#40a070&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34; bytes&lt;/span&gt;&lt;span style=&#34;color:#4070a0;font-weight:bold&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;Opening file ...&amp;#34;&lt;/span&gt;;            &lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;/* 显示文件大小 */&lt;/span&gt;
	&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;while&lt;/span&gt; ( len &lt;span style=&#34;color:#666&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span style=&#34;color:#40a070&#34;&gt;0&lt;/span&gt; )
	{
		inp.seekg( len&lt;span style=&#34;color:#666&#34;&gt;--&lt;/span&gt;, inp.beg );                                            &lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;/* 测试结果是:从文件头开始寻址,比从当前位置ios::cur寻址快一点. */&lt;/span&gt;
		tmp &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; inp.get();
		&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;if&lt;/span&gt; ( tmp &lt;span style=&#34;color:#666&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#40a070&#34;&gt;10&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;!&lt;/span&gt;(tag &lt;span style=&#34;color:#666&#34;&gt;^=&lt;/span&gt; &lt;span style=&#34;color:#40a070&#34;&gt;1&lt;/span&gt;) )
			&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;continue&lt;/span&gt;;                                                       &lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;/* windows中‘\t’和‘\r’重复 if(flag) */&lt;/span&gt;
		{
			oup &lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; tmp &lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; last;                                             &lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;/* 汉字输出 */&lt;/span&gt;
			flag &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#007020&#34;&gt;false&lt;/span&gt;;
		} &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;if&lt;/span&gt; ( tmp &lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#40a070&#34;&gt;0&lt;/span&gt; )
		{
			last	&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; tmp;
			flag	&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#007020&#34;&gt;true&lt;/span&gt;;
		} &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;else&lt;/span&gt;
			oup &lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; tmp;                                                     &lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;/* ASCII表内值输出 */&lt;/span&gt;
	}
	inp.close();
	oup.close();
	finish &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; clock();
	system( &lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;out.txt&amp;#34;&lt;/span&gt; );                                                            &lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;/* 打开输出文件 */&lt;/span&gt;
	std&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;cerr &lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#4070a0;font-weight:bold&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;Open the file successfully&lt;/span&gt;&lt;span style=&#34;color:#4070a0;font-weight:bold&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;&lt;/span&gt;;
	oup.open( &lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;run_time.txt&amp;#34;&lt;/span&gt;, std&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;ios&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;app );
	oup &lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;Time: &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; (finish &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt; start) &lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#40a070&#34;&gt;1000.0&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34; (s)-use beg&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; std&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;endl;    &lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;/* 在文件中写入操作时间 */&lt;/span&gt;
	&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;return&lt;/span&gt;(&lt;span style=&#34;color:#40a070&#34;&gt;0&lt;/span&gt;);
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;注：&lt;/p&gt;
&lt;p&gt;代码中使用从文件头开始寻址，比从当前位置ios::cur寻址快一点的原因是由于磁盘的读写方式决定的。因为，所有的寻址搜索都是文件头开始的，cur寻址先从文件头进行寻址到cur位置&lt;br /&gt;
再从cur寻址到偏移地址，beg从文件头通过偏移地址得到地址，所以beg要快。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;//为了验证这种读写方式，请看我写的一个简单的测试过程：&lt;/p&gt;
&lt;p&gt;为了使影响检测的因素简单化，我把上面代码中一些无关部分删除。&lt;/p&gt;
&lt;p&gt;测试代码：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;color:#007020&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#007020&#34;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#007020&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#007020&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#007020&#34;&gt;&amp;lt;fstream&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#007020&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#007020&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#007020&#34;&gt;&amp;lt;ctime&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#007020&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#007020&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#902000&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#06287e&#34;&gt;main&lt;/span&gt;()
{
	clock_t start, finish;
	start &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; clock();
	&lt;span style=&#34;color:#902000&#34;&gt;long&lt;/span&gt;		len &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;1L&lt;/span&gt;;
	std&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;ifstream	inp( &lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;in.txt&amp;#34;&lt;/span&gt;, std&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;ios&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;in );
	std&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;ofstream	oup( &lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;out.txt&amp;#34;&lt;/span&gt;, std&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;ios&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;out );
	inp.seekg( len, inp.end );
	len &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; (&lt;span style=&#34;color:#902000&#34;&gt;long&lt;/span&gt;) inp.tellg();
	std&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;cerr &lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;A total of &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; len &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#40a070&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34; bytes&lt;/span&gt;&lt;span style=&#34;color:#4070a0;font-weight:bold&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;Opening file ...&amp;#34;&lt;/span&gt;;
	&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;while&lt;/span&gt; ( len &lt;span style=&#34;color:#666&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span style=&#34;color:#40a070&#34;&gt;0&lt;/span&gt; )
	{
		&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;/******使用ios::cur寻址的代码********/&lt;/span&gt;
		oup &lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; (&lt;span style=&#34;color:#902000&#34;&gt;char&lt;/span&gt;) inp.get();
		inp.seekg( &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;2L&lt;/span&gt;, inp.cur ); len&lt;span style=&#34;color:#666&#34;&gt;--&lt;/span&gt;;


&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;/*******使用ios::beg寻址的代码********
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt; * inp.seekg(len--,inp.beg);
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt; * oup&amp;lt;&amp;lt;(char)inp.get();
&lt;/span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt; ************************************/&lt;/span&gt;
	}
	inp.close();
	oup.close();
	finish &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; clock();
	FILE&lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt;p1 &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; fopen( &lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;run_time.txt&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;a+&amp;#34;&lt;/span&gt; );
	fprintf( p1, &lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;Time: %.3lf (s)-use cur&lt;/span&gt;&lt;span style=&#34;color:#4070a0;font-weight:bold&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;&lt;/span&gt;, (&lt;span style=&#34;color:#902000&#34;&gt;double&lt;/span&gt;) (finish &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt; start) &lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#40a070&#34;&gt;1000.0&lt;/span&gt; ); &lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;/* 牵扯格式的我比较喜欢用C */&lt;/span&gt;
	fclose( p1 );
	system( &lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;run_time.txt&amp;#34;&lt;/span&gt; );
	std&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;cerr &lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#4070a0;font-weight:bold&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;Open the file successfully&lt;/span&gt;&lt;span style=&#34;color:#4070a0;font-weight:bold&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;&lt;/span&gt;;
	&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;return&lt;/span&gt;(&lt;span style=&#34;color:#40a070&#34;&gt;0&lt;/span&gt;);
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后，使用一个1000000字节的文本文件测试（测试数据生成代码在最后面），测试结果如下：&lt;br /&gt;
&lt;img src=&#34;https://i.imgur.com/fOGzLOv.jpg&#34; alt=&#34;测试结果&#34; /&gt;&lt;/p&gt;
&lt;p&gt;前三个是使用ios::beg寻址的，后三个是使用ios::cur寻址的，很明显前者要快一点。所以印证了我前面所说的。&lt;/p&gt;
&lt;p&gt;附测试数据生成代码：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;color:#007020&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#007020&#34;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#007020&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#007020&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#007020&#34;&gt;&amp;lt;cstdlib&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#007020&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#007020&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;namespace&lt;/span&gt; std;
&lt;span style=&#34;color:#902000&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#06287e&#34;&gt;main&lt;/span&gt;()
{
	freopen( &lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;out.txt&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;w&amp;#34;&lt;/span&gt;, stdout );
	&lt;span style=&#34;color:#902000&#34;&gt;long&lt;/span&gt; n &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#40a070&#34;&gt;1000000&lt;/span&gt;;
	&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;while&lt;/span&gt; ( n&lt;span style=&#34;color:#666&#34;&gt;--&lt;/span&gt; )
	{
		putchar( &lt;span style=&#34;color:#40a070&#34;&gt;65&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; rand() &lt;span style=&#34;color:#666&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color:#40a070&#34;&gt;26&lt;/span&gt; ); &lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;/* 大写字母 */&lt;/span&gt;
	}
	&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;return&lt;/span&gt;(&lt;span style=&#34;color:#40a070&#34;&gt;0&lt;/span&gt;);
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;测试环境皆为Win XP  professional，VC++6.0&lt;/p&gt;</description>
        
      </item>
    
  </channel>
</rss>